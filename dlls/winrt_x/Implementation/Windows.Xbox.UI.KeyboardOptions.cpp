#include "pch.h"
#include "Windows.Xbox.UI.KeyboardOptions.h"
#include "Windows.Xbox.UI.KeyboardOptions.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
//static_assert(false, "This file is generated by a tool and will be overwritten. Open this error and view the comment for assistance.");

namespace winrt::Windows::Xbox::UI::implementation
{
    hstring KeyboardOptions::DefaultText()
    {
        throw hresult_not_implemented();
    }
    void KeyboardOptions::DefaultText(hstring const& value)
    {
        throw hresult_not_implemented();
    }
    hstring KeyboardOptions::TitleText()
    {
        throw hresult_not_implemented();
    }
    void KeyboardOptions::TitleText(hstring const& value)
    {
        throw hresult_not_implemented();
    }
    hstring KeyboardOptions::DescriptionText()
    {
        throw hresult_not_implemented();
    }
    void KeyboardOptions::DescriptionText(hstring const& value)
    {
        throw hresult_not_implemented();
    }
    uint32_t KeyboardOptions::MaxLength()
    {
        throw hresult_not_implemented();
    }
    void KeyboardOptions::MaxLength(uint32_t value)
    {
        throw hresult_not_implemented();
    }
    bool KeyboardOptions::LengthIndicatorVisibility()
    {
        throw hresult_not_implemented();
    }
    void KeyboardOptions::LengthIndicatorVisibility(bool value)
    {
        throw hresult_not_implemented();
    }
    uint32_t KeyboardOptions::LengthIndicatorThreshold()
    {
        throw hresult_not_implemented();
    }
    void KeyboardOptions::LengthIndicatorThreshold(uint32_t value)
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Xbox::UI::VirtualKeyboardInputScope KeyboardOptions::InputScope()
    {
        throw hresult_not_implemented();
    }
    void KeyboardOptions::InputScope(winrt::Windows::Xbox::UI::VirtualKeyboardInputScope const& value)
    {
        throw hresult_not_implemented();
    }
}
